{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // Eigener Hook zur Auswertung des Inputs der Formularfelder und Reset auf leer nach Absenden\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    // fehlerhafter Input\n    valueChangeHandler,\n    // Veränderung am Input\n    inputBlurHandler,\n    // wenn Input Feld Fokus verliert, sprich nicht mehr angewählt ist\n    reset // Eingabewert zurücksetzen\n\n  };\n};\n\n_s(useInput, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useInput;","map":{"version":3,"sources":["D:/code/webform_entry_exit/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AAClCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAChCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMQ,KAAK,GAAG,MAAM;AAChBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHM,IAAAA,KAAK,EAAET,YADJ;AAEHY,IAAAA,OAAO,EAAER,YAFN;AAGHC,IAAAA,QAHG;AAGO;AACVC,IAAAA,kBAJG;AAIiB;AACpBI,IAAAA,gBALG;AAKe;AAClBC,IAAAA,KANG,CAMI;;AANJ,GAAP;AAQH,CA5BD;;GAAMb,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\n// Eigener Hook zur Auswertung des Inputs der Formularfelder und Reset auf leer nach Absenden\r\n\r\nconst useInput = (validateValue) => {\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    \r\n    const valueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n    \r\n    const inputBlurHandler = (event) => {\r\n        setIsTouched(true);\r\n    }\r\n\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue, \r\n        isValid: valueIsValid,\r\n        hasError, // fehlerhafter Input\r\n        valueChangeHandler, // Veränderung am Input\r\n        inputBlurHandler, // wenn Input Feld Fokus verliert, sprich nicht mehr angewählt ist\r\n        reset, // Eingabewert zurücksetzen\r\n    };\r\n};\r\n\r\nexport default useInput;"]},"metadata":{},"sourceType":"module"}