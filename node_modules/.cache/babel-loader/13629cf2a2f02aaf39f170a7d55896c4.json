{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\webform_entry_exit\\\\src\\\\components\\\\EntryFormGW.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => value.includes('@syna.ch'); // const isValidDate = value => value.toString() >= LocalDate.toString(); \n\n\nconst EntryFormGW = props => {\n  _s();\n\n  const {\n    value: dateOfEntryValue,\n    isValid: dateOfEntryIsValid,\n    hasError: dateOfEntryHasError,\n    valueChangeHandler: dateOfEntryChangeHandler,\n    inputBlurHandler: dateOfEntryBlurHandler,\n    reset: resetdateOfEntry\n  } = useInput(isNotEmpty);\n  const {\n    value: titleValue,\n    isValid: titleIsValid,\n    hasError: titleHasError,\n    valueChangeHandler: titleChangeHandler,\n    inputBlurHandler: titleBlurHandler,\n    reset: resettitle\n  } = useInput(isNotEmpty);\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: mailValue,\n    isValid: mailIsValid,\n    hasError: mailHasError,\n    valueChangeHandler: mailChangeHandler,\n    inputBlurHandler: mailBlurHandler,\n    reset: resetMail\n  } = useInput(isEmail);\n  let formIsValid = false;\n\n  if (dateOfEntryIsValid && titleIsValid && firstNameIsValid && lastNameIsValid && mailIsValid) {\n    formIsValid = true;\n  }\n\n  const dateOfEntryClasses = dateOfEntryHasError ? 'form-control invalid' : 'form-control';\n  const titleClasses = titleHasError ? 'form-control invalid' : 'form-control';\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const mailClasses = mailHasError ? 'form-control invalid' : 'form-control';\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(firstNameValue, lastNameValue, mailValue, titleValue);\n    resetdateOfEntry();\n    resettitle();\n    resetFirstName();\n    resetLastName();\n    resetMail();\n  };\n\n  const [title, setTitle] = useState();\n\n  function titleDropdownChangeHandler(event) {\n    setTitle(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: dateOfEntryClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Eintrittsdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"dateOfEntry\",\n          value: dateOfEntryValue,\n          onChange: dateOfEntryChangeHandler,\n          onBlur: dateOfEntryBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), dateOfEntryHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Datum ausw\\xE4hlen.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: titleClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Anrede\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"title\",\n          id: \"title\",\n          value: title,\n          onChange: titleDropdownChangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Frau\",\n            children: \"Frau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Herr\",\n            children: \"Herr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Vorname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Vorname eingeben.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nachname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Nachname eingeben.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mailadresse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: mailValue,\n        onChange: mailChangeHandler,\n        onBlur: mailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), mailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Bitte g\\xFCltige Mailadresse eingeben.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Zur\\xFCck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Senden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntryFormGW, \"VqUCm7X9cvjFYNn9bT9Yz/6qg4I=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = EntryFormGW;\nexport default EntryFormGW;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryFormGW\");","map":{"version":3,"sources":["D:/code/webform_entry_exit/src/components/EntryFormGW.js"],"names":["useInput","useState","isNotEmpty","value","trim","isEmail","includes","EntryFormGW","props","dateOfEntryValue","isValid","dateOfEntryIsValid","hasError","dateOfEntryHasError","valueChangeHandler","dateOfEntryChangeHandler","inputBlurHandler","dateOfEntryBlurHandler","reset","resetdateOfEntry","titleValue","titleIsValid","titleHasError","titleChangeHandler","titleBlurHandler","resettitle","firstNameValue","firstNameIsValid","firstNameHasError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","mailValue","mailIsValid","mailHasError","mailChangeHandler","mailBlurHandler","resetMail","formIsValid","dateOfEntryClasses","titleClasses","firstNameClasses","lastNameClasses","mailClasses","submitHandler","event","preventDefault","console","log","title","setTitle","titleDropdownChangeHandler","target"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\nimport { useState } from \"react\";\n\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.includes('@syna.ch');\n// const isValidDate = value => value.toString() >= LocalDate.toString(); \n\nconst EntryFormGW = (props) => {\n  const {\n    value: dateOfEntryValue,\n    isValid: dateOfEntryIsValid,\n    hasError: dateOfEntryHasError,\n    valueChangeHandler: dateOfEntryChangeHandler,\n    inputBlurHandler: dateOfEntryBlurHandler,\n    reset: resetdateOfEntry,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: titleValue,\n    isValid: titleIsValid,\n    hasError: titleHasError,\n    valueChangeHandler: titleChangeHandler,\n    inputBlurHandler: titleBlurHandler,\n    reset: resettitle,\n  } = useInput(isNotEmpty);\n  \n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n  \n  const {\n    value: mailValue,\n    isValid: mailIsValid,\n    hasError: mailHasError,\n    valueChangeHandler: mailChangeHandler,\n    inputBlurHandler: mailBlurHandler,\n    reset: resetMail,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (dateOfEntryIsValid && titleIsValid && firstNameIsValid && lastNameIsValid && mailIsValid) {\n    formIsValid = true;\n  }\n\n  const dateOfEntryClasses = dateOfEntryHasError ? 'form-control invalid' : 'form-control';\n  const titleClasses = titleHasError ? 'form-control invalid' : 'form-control';\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const mailClasses = mailHasError ? 'form-control invalid' : 'form-control';\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(firstNameValue, lastNameValue, mailValue, titleValue);\n\n    resetdateOfEntry();\n    resettitle();\n    resetFirstName();\n    resetLastName();\n    resetMail();\n  };\n\n  const [title, setTitle] = useState();\n\n  function titleDropdownChangeHandler(event){\n    setTitle(event.target.value)\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={dateOfEntryClasses}>\n          <label>Eintrittsdatum</label>\n          <input \n            type=\"date\" \n            id=\"dateOfEntry\"\n            value={dateOfEntryValue}\n            onChange={dateOfEntryChangeHandler}\n            onBlur={dateOfEntryBlurHandler}\n          />\n          {dateOfEntryHasError && <p className='error-text'>Bitte Datum auswählen.</p>}\n        </div>\n        <div className = {titleClasses}>\n          <label>Anrede</label>\n          <select \n          name='title' \n          id='title'\n          value = {title}\n          onChange={titleDropdownChangeHandler}>\n            <option value='Frau'>Frau</option>\n            <option value='Herr'>Herr</option>\n          </select>\n        </div>     \n        <div className={firstNameClasses}>\n          <label htmlFor='name'>Vorname</label>\n          <input \n            type='text' \n            id='name' \n            value={firstNameValue} \n            onChange={firstNameChangeHandler} \n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p className='error-text'>Bitte Vorname eingeben.</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor='name'>Nachname</label>\n          <input \n            type='text' \n            id='name' \n            value={lastNameValue} \n            onChange={lastNameChangeHandler} \n            onBlur={lastNameBlurHandler} \n          />\n          {lastNameHasError && <p className='error-text'>Bitte Nachname eingeben.</p>}          \n        </div>\n      </div>\n      <div className={mailClasses}>\n        <label htmlFor='name'>E-Mailadresse</label>\n        <input \n            type='email' \n            id='email' \n            value={mailValue} \n            onChange={mailChangeHandler} \n            onBlur={mailBlurHandler}\n        />\n        {mailHasError && <p className='error-text'>Bitte gültige Mailadresse eingeben.</p>}        \n      </div>\n      <div className='form-actions'>\n        <button>Zurück</button>\n        <button disabled={!formIsValid}>Senden</button>\n      </div>\n    </form>\n  );\n};\n\nexport default EntryFormGW;"]},"metadata":{},"sourceType":"module"}