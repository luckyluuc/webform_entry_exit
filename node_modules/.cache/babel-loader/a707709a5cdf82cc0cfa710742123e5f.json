{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\webform_entry_exit\\\\src\\\\components\\\\ExitForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst ExitForm = props => {\n  _s();\n\n  const {\n    value: dateOfExitValue,\n    isValid: dateOfExitIsValid,\n    hasError: dateOfExitHasError,\n    valueChangeHandler: dateOfExitChangeHandler,\n    inputBlurHandler: dateOfExitBlurHandler,\n    reset: resetDateOfExit\n  } = useInput(isNotEmpty);\n  const {\n    value: lastWorkdayValue,\n    isValid: lastWorkdayIsValid,\n    hasError: lastWorkdayHasError,\n    valueChangeHandler: lastWorkdayChangeHandler,\n    inputBlurHandler: lastWorkdayBlurHandler,\n    reset: resetLastWorkday\n  } = useInput(isNotEmpty);\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  let formIsValid = false;\n\n  if (dateOfExitIsValid && lastWorkdayIsValid && firstNameIsValid && lastNameIsValid) {\n    formIsValid = true;\n  }\n\n  const dateOfExitClasses = dateOfExitHasError ? 'form-control invalid' : 'form-control';\n  const lastWorkdayClasses = lastWorkdayHasError ? 'form-control invalid' : 'form-control';\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(dateOfExitValue, lastWorkdayValue, firstNameValue, lastNameValue);\n    resetDateOfExit();\n    resetLastWorkday();\n    resetFirstName();\n    resetLastName();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-control\",\n      children: \"Austritt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group-exit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: dateOfExitClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Austrittsdatum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"dateOfExit\",\n          value: dateOfExitValue,\n          onChange: dateOfExitChangeHandler,\n          onBlur: dateOfExitBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), dateOfExitHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Datum ausw\\xE4hlen.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastWorkdayClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Letzter Arbeitstag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"lastWorkday\",\n          value: lastWorkdayValue,\n          onChange: lastWorkdayChangeHandler,\n          onBlur: lastWorkdayBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), lastWorkdayHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Datum ausw\\xE4hlen.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group-exit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Vorname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Vorname eingeben.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nachname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Bitte Nachname eingeben.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Zur\\xFCck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Senden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExitForm, \"QVwUkN/4GQR+73doFDuYkNQDa20=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = ExitForm;\nexport default ExitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExitForm\");","map":{"version":3,"sources":["D:/code/webform_entry_exit/src/components/ExitForm.js"],"names":["useInput","isNotEmpty","value","trim","ExitForm","props","dateOfExitValue","isValid","dateOfExitIsValid","hasError","dateOfExitHasError","valueChangeHandler","dateOfExitChangeHandler","inputBlurHandler","dateOfExitBlurHandler","reset","resetDateOfExit","lastWorkdayValue","lastWorkdayIsValid","lastWorkdayHasError","lastWorkdayChangeHandler","lastWorkdayBlurHandler","resetLastWorkday","firstNameValue","firstNameIsValid","firstNameHasError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","formIsValid","dateOfExitClasses","lastWorkdayClasses","firstNameClasses","lastNameClasses","submitHandler","event","preventDefault","console","log","onCancel"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\r\n\r\nconst isNotEmpty = value => value.trim() !== '';\r\n\r\nconst ExitForm = (props) => {\r\n  const {\r\n    value: dateOfExitValue,\r\n    isValid: dateOfExitIsValid,\r\n    hasError: dateOfExitHasError,\r\n    valueChangeHandler: dateOfExitChangeHandler,\r\n    inputBlurHandler: dateOfExitBlurHandler,\r\n    reset: resetDateOfExit,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: lastWorkdayValue,\r\n    isValid: lastWorkdayIsValid,\r\n    hasError: lastWorkdayHasError,\r\n    valueChangeHandler: lastWorkdayChangeHandler,\r\n    inputBlurHandler: lastWorkdayBlurHandler,\r\n    reset: resetLastWorkday,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: firstNameValue,\r\n    isValid: firstNameIsValid,\r\n    hasError: firstNameHasError,\r\n    valueChangeHandler: firstNameChangeHandler,\r\n    inputBlurHandler: firstNameBlurHandler,\r\n    reset: resetFirstName,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: lastNameValue,\r\n    isValid: lastNameIsValid,\r\n    hasError: lastNameHasError,\r\n    valueChangeHandler: lastNameChangeHandler,\r\n    inputBlurHandler: lastNameBlurHandler,\r\n    reset: resetLastName,\r\n  } = useInput(isNotEmpty);\r\n  \r\n  let formIsValid = false;\r\n\r\n  if (dateOfExitIsValid && lastWorkdayIsValid && firstNameIsValid && lastNameIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const dateOfExitClasses = dateOfExitHasError ? 'form-control invalid' : 'form-control';\r\n  const lastWorkdayClasses = lastWorkdayHasError ? 'form-control invalid' : 'form-control';\r\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\r\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\r\n \r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    console.log('Submitted!');\r\n    console.log(dateOfExitValue, lastWorkdayValue, firstNameValue, lastNameValue, );\r\n\r\n    resetDateOfExit();\r\n    resetLastWorkday();\r\n    resetFirstName();\r\n    resetLastName();\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <h1 className=\"form-control\">Austritt</h1>\r\n      <div className='control-group-exit'>\r\n      <div className={dateOfExitClasses}>\r\n          <label>Austrittsdatum</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"dateOfExit\"\r\n            value={dateOfExitValue}\r\n            onChange={dateOfExitChangeHandler}\r\n            onBlur={dateOfExitBlurHandler}\r\n          />\r\n          {dateOfExitHasError && <p className='error-text'>Bitte Datum auswählen.</p>}\r\n        </div>\r\n        <div className={lastWorkdayClasses}>\r\n          <label>Letzter Arbeitstag</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"lastWorkday\"\r\n            value={lastWorkdayValue}\r\n            onChange={lastWorkdayChangeHandler}\r\n            onBlur={lastWorkdayBlurHandler}\r\n          />\r\n          {lastWorkdayHasError && <p className='error-text'>Bitte Datum auswählen.</p>}\r\n        </div>\r\n        </div>\r\n        <div className='control-group-exit'>\r\n        <div className={firstNameClasses}>\r\n          <label htmlFor='name'>Vorname</label>\r\n          <input \r\n            type='text' \r\n            id='name' \r\n            value={firstNameValue} \r\n            onChange={firstNameChangeHandler} \r\n            onBlur={firstNameBlurHandler}\r\n          />\r\n          {firstNameHasError && <p className='error-text'>Bitte Vorname eingeben.</p>}\r\n        </div>\r\n        <div className={lastNameClasses}>\r\n          <label htmlFor='name'>Nachname</label>\r\n          <input \r\n            type='text' \r\n            id='name' \r\n            value={lastNameValue} \r\n            onChange={lastNameChangeHandler} \r\n            onBlur={lastNameBlurHandler} \r\n          />\r\n          {lastNameHasError && <p className='error-text'>Bitte Nachname eingeben.</p>}          \r\n        </div>\r\n      </div>\r\n      <div className='form-actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Zurück</button>\r\n        <button disabled={!formIsValid}>Senden</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExitForm;"]},"metadata":{},"sourceType":"module"}