{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const [enteredMail, setEnteredMail] = useState('');\n  const [enteredMailTouched, setEnteredMailTouched] = useState(false);\n  const enteredMailIsValid = enteredMail.includes('@' && '.');\n  const mailInputIsInvalid = !enteredMailIsValid && enteredMailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredMailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const mailInputChangeHandler = event => {\n    setEnteredMail(event.target.value);\n  };\n\n  const mailInputBlurHandler = event => {\n    setEnteredMailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredMailTouched(true);\n\n    if (!enteredNameIsValid && !enteredMailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredMail);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredMail('');\n    setEnteredMailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const mailInputClasses = mailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mailInputClasses,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"mail\",\n        onChange: mailInputChangeHandler,\n        onBlur: mailInputBlurHandler,\n        value: enteredMail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Senden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0UGhi0ACEa2LxLMFgvHPZ+i0Qu4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/code/01-starting-project/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredMail","setEnteredMail","enteredMailTouched","setEnteredMailTouched","enteredMailIsValid","includes","mailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","mailInputChangeHandler","mailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","mailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const [enteredMail, setEnteredMail] = useState('');\n  const [enteredMailTouched, setEnteredMailTouched] = useState(false);\n\n  const enteredMailIsValid = enteredMail.includes('@' && '.');\n  const mailInputIsInvalid = !enteredMailIsValid && enteredMailTouched;\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredMailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const mailInputChangeHandler = event => {\n    setEnteredMail(event.target.value);\n  };\n\n  const mailInputBlurHandler = event => {\n    setEnteredMailTouched(true);\n  };  \n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredMailTouched(true);\n\n    if (!enteredNameIsValid && !enteredMailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredMail);\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredMail('');\n    setEnteredMailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const mailInputClasses = mailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n      </div>\n      <div className={mailInputClasses}>\n      <input\n          type='text'\n          id='mail'\n          onChange={mailInputChangeHandler}\n          onBlur={mailInputBlurHandler}\n          value={enteredMail}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Senden</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}